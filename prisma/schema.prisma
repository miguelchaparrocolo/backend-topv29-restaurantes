// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Countries {
  id   String @id @default(cuid())
  name String
}

model Cities {
  id   String @id @default(cuid())
  name String
}

model Locations {
  id   String @id @default(cuid())
  name String
}

model Ubications {
  id String @id @default(cuid())
}

model Foods {
  id            String       @id @default(cuid())
  name          String
  price         String
  image         String
  rate          String
  Restaurants   Restaurants? @relation(fields: [restaurantsId], references: [id])
  restaurantsId String?
}

model Restaurants {
  id           String      @id @default(cuid())
  name         String
  schedules    String
  foodtype     String
  address      String
  rating       String
  logo         String
  Categories   Categories? @relation(fields: [categoriesId], references: [id])
  categoriesId String?
  food         Foods[]
}

model Categories {
  id         String        @id @default(cuid())
  name       String
  restaurant Restaurants[]
}

model Details {
  id         String   @id @default(cuid())
  date       String   @unique
  asistentes String
  hora       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Pedidos {
  id String @id @default(cuid())
}

model User {
  id                   String    @id @default(cuid())
  email                String    @unique
  firstName            String
  lastName             String
  password             String
  isActive             Boolean   @default(false)
  avatar               String?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  // relations
  roles UserRole[]
}

//tabla role
model Role {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  users UserRole[]
}

model UserRole {
  id String @id @default(cuid())

  // relations
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
}

model Reviews {
  id        String   @id @default(cuid())
  comment   String
  createdAt DateTime @default(now())
}
